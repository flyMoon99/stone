version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: stone-api-postgres
    environment:
      POSTGRES_DB: stone
      POSTGRES_USER: stone
      POSTGRES_PASSWORD: stone123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - stone-api-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stone -d stone"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: stone-api-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - stone-api-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API服务
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stone-api
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://stone:stone123@postgres:5432/stone
      REDIS_URL: redis://redis:6379
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET:-admin-secret-key-change-in-production}
      MEMBER_JWT_SECRET: ${MEMBER_JWT_SECRET:-member-secret-key-change-in-production}
      JWT_EXPIRES_IN: 7d
      JWT_REFRESH_THRESHOLD: 86400
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - stone-api-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/public/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  stone-api-network:
    driver: bridge
